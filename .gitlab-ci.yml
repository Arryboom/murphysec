# This file is a template, and might need editing before it works on your project.
# To contribute improvements to CI/CD templates, please follow the Development guide at:
# https://docs.gitlab.com/ee/development/cicd/templates.html
# This specific template is located at:
# https://gitlab.com/gitlab-org/gitlab/-/blob/master/lib/gitlab/ci/templates/Getting-Started.gitlab-ci.yml

# This is a sample GitLab CI/CD configuration file that should run without any modifications.
# It demonstrates a basic 3 stage CI/CD pipeline. Instead of real tests or scripts,
# it uses echo commands to simulate the pipeline execution.
#
# A pipeline is composed of independent jobs that run scripts, grouped into stages.
# Stages run in sequential order, but jobs within stages run in parallel.
#
# For more information, see: https://docs.gitlab.com/ee/ci/yaml/index.html#stages

stages:          # List of stages for jobs, and their order of execution
  - build
  - release

variables:
  GOPROXY: https://goproxy.cn,direct
  RELEASE_GH:
    value: "false"
    description: if true, release to github


compose-build:
  image: golang:1.17.7-buster
  stage: build
  artifacts:
    expire_in: 1 day
    paths:
      - murphysec-linux-amd64
      - murphysec-windows-amd64.exe
      - murphysec-darwin-amd64
      - murphysec-linux-amd64.sha256
      - murphysec-windows-amd64.exe.sha256
      - murphysec-darwin-amd64.sha256
  script:
    - export
    - GOOS=linux GOARCH=amd64 go build -o out/murphysec-linux-amd64 -v .
    - GOOS=windows GOARCH=amd64 go build -o out/murphysec-windows-amd64.exe -v .
    - GOOS=darwin GOARCH=amd64 go build -o out/murphysec-darwin-amd64 -v .
    - cd out
    - chmod 0755 *
    - find -type f | xargs -I {} sh -c "sha256sum {} > {}.sha256"
    - cat *.sha256
    - sha256sum -c *.sha256
    - mv * ../
    - cd ..
  
release-to-github:
  image: iseki0/gh:latest
  stage: release
  variables:
    GIT_COMMITTER_NAME: 'CI.working'
    GIT_AUTHOR_NAME: 'CI.working'
    GIT_AUTHOR_EMAIL: 'working@iseki.space'
    GIT_COMMITTER_EMAIL: 'working@iseki.space'
    GITHUB_ISEKI_WORKING_TOKEN: $GITHUB_ISEKI_WORKING_TOKEN

  script:
    - export GITHUB_TOKEN=$GITHUB_ISEKI_WORKING_TOKEN
    - export
    - gh version
    - gh auth status
    - ls
    - git clone https://isekiworking:$GITHUB_ISEKI_WORKING_TOKEN@github.com/murphysec/murphysec.git
    - cd murphysec
    - gh release create $CI_COMMIT_TAG ../murphysec-windows-amd64.exe ../murphysec-linux-amd64 ../murphysec-darwin-amd64 --generate-notes
    - git clone https://isekiworking:$GITHUB_ISEKI_WORKING_TOKEN@github.com/murphysec/scoop-bucket.git --depth 1
    - cd scoop-bucket
    - ls
    - |
      echo "{
              \"version\": \"$CI_COMMIT_TAG\",
              \"url\":\"https://github.com/murphysec/murphysec/releases/download/$CI_COMMIT_TAG/murphysec-windows-amd64.exe#/murphysec.exe\",
              \"bin\": \"murphysec.exe\"
              }" |jq > bucket/murphysec.json
    - cat bucket/murphysec.json
    - git add .
    - "echo \"Time: `date -Iseconds`\\nCommit:$CI_COMMIT_SHA\""
    - "git commit -am \"Time: `date -Iseconds`\nCommit:$CI_COMMIT_SHA\""
    - git push

  only:
    variables:
      - $CI_COMMIT_TAG && $RELEASE_GH == "true"